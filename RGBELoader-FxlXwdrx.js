import{al as t,am as e,an as r,ao as a,d as n,m as o}from"./updateSize-CHJVY26F.js";class s extends t{constructor(t){super(t),this.type=e}parse(t){const n=function(t,e){switch(t){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(e||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(e||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(e||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(e||""))}},o=function(t,e,r){e=e||1024;let a=t.pos,n=-1,o=0,s="",i=String.fromCharCode.apply(null,new Uint16Array(t.subarray(a,a+128)));for(;0>(n=i.indexOf("\n"))&&o<e&&a<t.byteLength;)s+=i,o+=i.length,a+=128,i+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(a,a+128)));return-1<n&&(!1!==r&&(t.pos+=o+n+1),s+i.slice(0,n))},s=function(t,e,r,a){const n=t[e+3],o=Math.pow(2,n-128)/255;r[a+0]=t[e+0]*o,r[a+1]=t[e+1]*o,r[a+2]=t[e+2]*o,r[a+3]=1},i=function(t,e,r,n){const o=t[e+3],s=Math.pow(2,o-128)/255;r[n+0]=a.toHalfFloat(Math.min(t[e+0]*s,65504)),r[n+1]=a.toHalfFloat(Math.min(t[e+1]*s,65504)),r[n+2]=a.toHalfFloat(Math.min(t[e+2]*s,65504)),r[n+3]=a.toHalfFloat(1)},l=new Uint8Array(t);l.pos=0;const c=function(t){const e=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,i={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;for((t.pos>=t.byteLength||!(l=o(t)))&&n(1,"no header found"),(c=l.match(/^#\?(\S+)/))||n(3,"bad initial token"),i.valid|=1,i.programtype=c[1],i.string+=l+"\n";l=o(t),!1!==l;)if(i.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(e))&&(i.gamma=parseFloat(c[1])),(c=l.match(r))&&(i.exposure=parseFloat(c[1])),(c=l.match(a))&&(i.valid|=2,i.format=c[1]),(c=l.match(s))&&(i.valid|=4,i.height=parseInt(c[1],10),i.width=parseInt(c[2],10)),2&i.valid&&4&i.valid)break}else i.comments+=l+"\n";return 2&i.valid||n(3,"missing format specifier"),4&i.valid||n(3,"missing image size specifier"),i}(l),h=c.width,p=c.height,d=function(t,e,r){const a=e;if(a<8||a>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);a!==(t[2]<<8|t[3])&&n(3,"wrong scanline width");const o=new Uint8Array(4*e*r);o.length||n(4,"unable to allocate buffer space");let s=0,i=0;const l=4*a,c=new Uint8Array(4),h=new Uint8Array(l);let p=r;for(;p>0&&i<t.byteLength;){i+4>t.byteLength&&n(1),c[0]=t[i++],c[1]=t[i++],c[2]=t[i++],c[3]=t[i++],2==c[0]&&2==c[1]&&(c[2]<<8|c[3])==a||n(3,"bad rgbe scanline format");let e,r=0;for(;r<l&&i<t.byteLength;){e=t[i++];const a=e>128;if(a&&(e-=128),(0===e||r+e>l)&&n(3,"bad scanline data"),a){const a=t[i++];for(let t=0;t<e;t++)h[r++]=a}else h.set(t.subarray(i,i+e),r),r+=e,i+=e}const d=a;for(let t=0;t<d;t++){let e=0;o[s]=h[t+e],e+=a,o[s+1]=h[t+e],e+=a,o[s+2]=h[t+e],e+=a,o[s+3]=h[t+e],s+=4}p--}return o}(l.subarray(l.pos),h,p);let m,f,u;switch(this.type){case r:u=d.length/4;const t=new Float32Array(4*u);for(let e=0;e<u;e++)s(d,4*e,t,4*e);m=t,f=r;break;case e:u=d.length/4;const a=new Uint16Array(4*u);for(let e=0;e<u;e++)i(d,4*e,a,4*e);m=a,f=e;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:h,height:p,data:m,header:c.string,gamma:c.gamma,exposure:c.exposure,type:f}}setDataType(t){return this.type=t,this}load(t,a,s,i){return super.load(t,(function(t,s){switch(t.type){case r:case e:t.colorSpace=n,t.minFilter=o,t.magFilter=o,t.generateMipmaps=!1,t.flipY=!0}a&&a(t,s)}),s,i)}}export{s as R};
